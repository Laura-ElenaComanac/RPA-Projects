<Activity mc:Ignorable="sap sap2010" x:Class="MainSequence" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1011,2723" sap2010:WorkflowViewState.IdRef="MainSequence_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>Microsoft.Activities.Extensions.Statements</x:String>
      <x:String>Microsoft.Activities.Expressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>Microsoft.Activities.Extensions</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="MainSequence" sap:VirtualizedContainerService.HintSize="1021,2658" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="letter" />
      <Variable x:TypeArguments="s:String[]" Name="finalWord" />
      <Variable x:TypeArguments="x:Int32" Name="nr" />
      <Variable x:TypeArguments="x:Boolean" Name="found" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Int32)" Default="[New Dictionary(Of String, Int32) From{}]" Name="wordDictionary" />
      <Variable x:TypeArguments="x:Boolean" Name="exists" />
      <Variable x:TypeArguments="x:String" Name="stringWord" />
      <Variable x:TypeArguments="x:Boolean" Name="foundItem" />
      <Variable x:TypeArguments="s:String[]" Name="wrongTrials">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="New String(){}" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadTextFile Content="[stringWord]" DisplayName="Read Text File" FileName="Z:\Users\laura-elena.olaru\Downloads\RPA\word.txt" sap:VirtualizedContainerService.HintSize="979,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <p:SplitString DisplayName="Split string" sap:VirtualizedContainerService.HintSize="979,22" sap2010:WorkflowViewState.IdRef="SplitString_1" Input="[stringWord]" Result="[finalWord]" Separator="," StringSplitOptions="None" />
    <Assign sap:VirtualizedContainerService.HintSize="979,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[nr]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[finalWord.Length]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InterruptibleDoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="979,2034" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
      <ui:InterruptibleDoWhile.Body>
        <Sequence sap:VirtualizedContainerService.HintSize="943,1867" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="901,1775" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="859,242" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Please give a letter" Title="Guess the word!">
              <ui:InputDialog.Result>
                <OutArgument x:TypeArguments="x:String">[letter]</OutArgument>
              </ui:InputDialog.Result>
            </ui:InputDialog>
            <ui:AppendLine DisplayName="Append Line" FileName="Z:\Users\laura-elena.olaru\Downloads\RPA\result.txt" sap:VirtualizedContainerService.HintSize="859,134" sap2010:WorkflowViewState.IdRef="AppendLine_1" Text="[letter]" UseDefaultEncoding="False" />
            <Assign sap:VirtualizedContainerService.HintSize="859,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[found]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="If finalWord.Contains(letter) Then&#xD;&#xA;&#x9;foundItem = True&#xD;&#xA;Else&#xD;&#xA;&#x9;foundItem = False&#xD;&#xA;End If" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="859,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="s:String[]" x:Key="finalWord">
                  <mva:VisualBasicValue x:TypeArguments="s:String[]" ExpressionText="finalWord" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="letter">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="letter" />
                </InArgument>
                <OutArgument x:TypeArguments="x:Boolean" x:Key="foundItem">
                  <mva:VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="foundItem" />
                </OutArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
            <If Condition="[foundItem.Equals(True)]" sap:VirtualizedContainerService.HintSize="859,637" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke BuildDictionarySequence workflow" sap:VirtualizedContainerService.HintSize="334,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="BuildDictionarySequence.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <OutArgument x:TypeArguments="x:Boolean" x:Key="found">[found]</OutArgument>
                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)" x:Key="wordDictionary">[wordDictionary]</InOutArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="letter">[letter]</InArgument>
                    <InOutArgument x:TypeArguments="x:Boolean" x:Key="exists">[exists]</InOutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="480,488" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,396" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <TryCatch.Try>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="wrongTrials = wrongTrials.Concat({letter}).ToArray" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="s:String[]" x:Key="wrongTrials">
                            <mva:VisualBasicReference x:TypeArguments="s:String[]" ExpressionText="wrongTrials" />
                          </InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="letter">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="letter" />
                          </InArgument>
                        </ui:InvokeCode.Arguments>
                      </ui:InvokeCode>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[exception]" />
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </Sequence>
              </If.Else>
            </If>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke FoundFlowchart workflow" sap:VirtualizedContainerService.HintSize="859,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="FoundFlowchart.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:Boolean" x:Key="found">[found]</InArgument>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)" x:Key="wordDictionary">[wordDictionary]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="859,93" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[wrongTrials.Count]" />
          </Sequence>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
      <ui:InterruptibleDoWhile.Condition>
        <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="not nr=wordDictionary.Count and wrongTrials.Count&lt;3" />
      </ui:InterruptibleDoWhile.Condition>
    </ui:InterruptibleDoWhile>
    <If Condition="[wrongTrials.Count.Equals(3)]" sap:VirtualizedContainerService.HintSize="979,210" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;Game over! Too many wrong trials!&quot;]" />
      </If.Then>
      <If.Else>
        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Congrats! You won!&quot;]" />
      </If.Else>
    </If>
  </Sequence>
</Activity>